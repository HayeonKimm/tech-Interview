큐 (Queue)
큐는 삽입과 삭제의 위치와 방법이 제한되어있어, 한쪽 끝에서는 삽입 작업이, 반대쪽 끝에서는 삭제
작업이 이루어지는 자료구조입니다.

데이터가 삽입된 순서대로 삭제되는 선입 선출 구조입니다 front가 가장 첫번째원소 리어원소는 가장 마지막 원소 


(부가설명)
포화상태 검사
마지막 인덱스까지 원소가 저장된경우, rear의 값이 배열의 마지막 인덱스n -1 과 값이 같을때 큐는 포화상태.

공백상태 검사
front와 rear의 값이 -1인경우와 rear원소를 삭제하여 front가 rear위치에 있는경우, 즉 값이 같을때 큐는 공백상태

삭제 연산
front의 값을 하나증가시키고 원소를 삭제하여 반환, 가장 먼저 사입된 원소를 가장 먼저 삭제.


스택 (stack)
데이터 삽입과 삭제는 top라고 부르는 한쪽 끝에서만 이루어지도록 제한하여 만든 자료구조입니다.
시간 순서에 따라 데이터가 쌓이고, 삭제할 때는 가장 마지막에 삽입된 데이터가 가장 먼저 삭제되므로 후입 선출의 구조.


(부가설명)
삽입연산 
top+1  top의위치먼저 증가시키고 난뒤 추가, 단 top의 위치가 스택의 크기 보다 크다면 오버플로우 상태가 되므로 삽입연산을 수행하지
못하고 종료

오버플로우 상태가 아니라면 스택의 top이 가리키는 위치에 x삽입 

빈스택인지 확인후 top가 가리키던 데이터를 저장한 뒤 top의 위치를 하나 감소, 그리고 x값 반환


힙
최대 힙은 완전 이진 트리이면서 부모 노드가 자식 노드보다 큰 트리

최소 힙은 완전 이진 트리이면서 부모 노드가 자식 노드보다 작은 트리이다.

힙은 최댓값 혹은 최솟값을 빠르게 찾아내기에 유리한 자료구조이다.

그래서 우선순위 큐를 구현할 때 쓰이기도 하고

허프만 코드를 구현할 때도 쓰이고 

힙 정렬을 구현할 때도 쓰인다.


(부가설명)

우선순위 큐(Priority Queue)는 들어간 순서에 상관없이 우선순위가 높은 데이터가 먼저 나오는 것 것을 말합니다.

우선순위 큐는 힙(Heap)이라는 자료구조를 가지고 구현할 수있기 때문에 이 둘을 묶어서 같이 쓴 것입니다.

보통 힙이라고 하면 일반적으로 최대 힙을 의미한다.

허프만 코드 
 데이터를 효율적으로 압축하는데 사용하는 방법으로 탐욕 알고리즘 중 하나입니다.

압축하고자 하는 문자열에서 자주 등장하는 문자는 짧은 비트로 표현하고 거의 등장하지 않는 문자는 긴 비트로 표현합니다.
 (가변 길이 코드)

즉, 문자의 빈도수를 이용합니다.